// Generated by view binder compiler. Do not edit!
package com.shopapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.shopapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final TextInputEditText editAddress;

  @NonNull
  public final TextInputEditText editEmail;

  @NonNull
  public final TextInputEditText editFullName;

  @NonNull
  public final TextInputEditText editPhone;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final Button saveButton;

  private ActivityEditProfileBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton backButton, @NonNull TextInputEditText editAddress,
      @NonNull TextInputEditText editEmail, @NonNull TextInputEditText editFullName,
      @NonNull TextInputEditText editPhone, @NonNull CircleImageView profileImage,
      @NonNull Button saveButton) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.editAddress = editAddress;
    this.editEmail = editEmail;
    this.editFullName = editFullName;
    this.editPhone = editPhone;
    this.profileImage = profileImage;
    this.saveButton = saveButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.editAddress;
      TextInputEditText editAddress = ViewBindings.findChildViewById(rootView, id);
      if (editAddress == null) {
        break missingId;
      }

      id = R.id.editEmail;
      TextInputEditText editEmail = ViewBindings.findChildViewById(rootView, id);
      if (editEmail == null) {
        break missingId;
      }

      id = R.id.editFullName;
      TextInputEditText editFullName = ViewBindings.findChildViewById(rootView, id);
      if (editFullName == null) {
        break missingId;
      }

      id = R.id.editPhone;
      TextInputEditText editPhone = ViewBindings.findChildViewById(rootView, id);
      if (editPhone == null) {
        break missingId;
      }

      id = R.id.profileImage;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      return new ActivityEditProfileBinding((LinearLayout) rootView, backButton, editAddress,
          editEmail, editFullName, editPhone, profileImage, saveButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
